apiVersion: v1
kind: ConfigMap
metadata:
  name: keycloak-init-script
data:
  init.sh: |
    #!/bin/bash
    echo "Waiting for Keycloak to be ready..."
    until curl -s http://localhost:8080/auth; do
      sleep 5
    done

    ./opt/keycloak/bin/kcadm.sh config credentials \
      --server http://localhost:8080 \
      --realm master \
      --user ${KEYCLOAK_ADMIN} \
      --password ${KEYCLOAK_ADMIN_PASSWORD}
    
    ./opt/keycloak/bin/kcadm.sh create realms -s realm=PolarBookshop -s enabled=true
    
    ./opt/keycloak/bin/kcadm.sh create roles -r PolarBookshop -s name=employee
    ./opt/keycloak/bin/kcadm.sh create roles -r PolarBookshop -s name=customer
    
    ./opt/keycloak/bin/kcadm.sh create users \
      -r PolarBookshop \
      -s username=isabelle \
      -s firstName=Isabelle \
      -s lastName=Dahl \
      -s enabled=true
    
    ./opt/keycloak/bin/kcadm.sh add-roles \
      -r PolarBookshop \
      --uusername isabelle \
      --rolename employee \
      --rolename customer
    
    ./opt/keycloak/bin/kcadm.sh create users \
      -r PolarBookshop \
      -s username=bjorn \
      -s firstName=Bjorn \
      -s lastName=Vinterberg \
      -s enabled=true
    
    ./opt/keycloak/bin/kcadm.sh add-roles \
      -r PolarBookshop \
      --uusername bjorn \
      --rolename customer
    
    ./opt/keycloak/bin/kcadm.sh set-password -r PolarBookshop --username isabelle --new-password password
    ./opt/keycloak/bin/kcadm.sh set-password -r PolarBookshop --username bjorn --new-password password
    
    # register Edge Service as an OAuth2 Client in the realm
    ./kcadm.sh create clients -r PolarBookshop \
        -s clientId=edge-service \
        -s enabled=true \
        -s publicClient=false \
        -s secret=polar-keycloak-secret \
        -s 'redirectUris=["http://edge-service:80", "http://edge-service:80/login/oauth2/code/*"]'
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: polar-keycloak
spec:
  replicas: 1
  selector:
    matchLabels:
      app: polar-keycloak
  template:
    metadata:
      labels:
        app: polar-keycloak
    spec:
      containers:
        - name: polar-keycloak
          image: quay.io/keycloak/keycloak:19.0
          args: ["start-dev"]
          ports:
            - containerPort: 8080
          env:
            - name: KEYCLOAK_ADMIN
              value: "cynicdog"
            - name: KEYCLOAK_ADMIN_PASSWORD
              value: "cynicdog"
          volumeMounts:
            - name: init-script
              mountPath: /opt/keycloak-init
              subPath: init.sh
              readOnly: true
          lifecycle:
            postStart:
              exec:
                command: ["/bin/sh", "/opt/keycloak-init"]
      volumes:
        - name: init-script
          configMap:
            name: keycloak-init-script
---
apiVersion: v1
kind: Service
metadata:
  name: polar-keycloak
spec:
  selector:
    app: polar-keycloak
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
  type: ClusterIP
