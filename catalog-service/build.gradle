plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.0'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'com.google.cloud.tools.jib' version '3.4.3'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

ext {
    set('springCloudVersion', "2023.0.3")
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(20)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.cloud:spring-cloud-starter-config'
    implementation 'org.springframework.retry:spring-retry'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-starter-webflux'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

bootRun {
    systemProperty 'spring.profiles.active', 'testdata'
}

jib {
    from {
        image = 'eclipse-temurin:20'
        platforms {
            platform {
                os = "linux"
                architecture = "arm64"
            }
            platform {
                os = "linux"
                architecture = "amd64"
            }
        }
    }
    to {
        image = 'cynicdog/catalog-service'
        tags = ['latest']
        auth {
            username = System.getenv('DOCKERHUB_USERNAME') ?: 'default_username'
            password = System.getenv('DOCKERHUB_PASSWORD') ?: 'default_password'
        }
    }
//    container {
//        environment = [
//                'SPRING_CLOUD_CONFIG_URI': System.getenv('SPRING_CLOUD_CONFIG_URI') ?: 'http://localhost:8888'
//        ]
//    }
}